@model List<Book>
@{
    ViewBag.Title = "Index";
}

<h2 style="color:orangered">Filters</h2>

<table class="table" id="booksTable">
    <thead>
        <tr>
            
            <th style="color:steelblue">
                <strong> Genre </strong> <div style="color:orangered">
                    <input type="radio" id="sortByGenre" name="sortOption" value="Genre" onchange="filterBooks()" />
                    <label for="sortByGenre"> Sort by Genre:</label>
                </div>
            </th>
            <th style="color:steelblue">
                Author <div style="color:orangered">
                    <input type="radio" id="sortByAuthor" name="sortOption" value="Author" onchange="filterBooks()" />
                    <label for="sortByAuthor"> Sort by Author:</label>
                    
                </div>
            </th>
            <th style="color:steelblue">
                Publication Year <div style="color:orangered">
                    
                    <input type="radio" id="sortByPublicationYear" name="sortOption" value="PublicationYear" onchange="filterBooks()" />
                    <label for="sortByPublicationYear"> Sort by Publication Year: (Descending)</label>
                </div>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model)
        {
            <tr>
                <td style="color:white">@book.Genre </td>
                <td style="color:white">@book.Author</td>
                <td style="color:white">@book.PublicationYear</td>
            </tr>
        }
    </tbody>
</table>

@section scripts {
    <script>
        function filterBooks() {
            var table = document.getElementById("booksTable");
            var rows = table.getElementsByTagName("tr");
            var sortingIndex = -1;
            var isDescending = false;

            // Get selected sorting option
            var sortOption = document.querySelector('input[name="sortOption"]:checked').value;

            // Reset sorting classes
            for (var i = 0; i < rows[0].getElementsByTagName("th").length; i++) {
                rows[0].getElementsByTagName("th")[i].classList.remove("asc", "desc");
            }

            // Apply sorting
            if (sortOption === "Genre") {
                sortingIndex = 0; // Genre is at index 0
            } else if (sortOption === "Author") {
                sortingIndex = 1; // Author is at index 2
            } else if (sortOption === "PublicationYear") {
                sortingIndex = 2; // Publication Year is at index 3
                isDescending = true; // Sort by Publication Year in descending order
            }

            if (sortingIndex !== -1) {
                // Toggle sorting order
                if (rows[0].getElementsByTagName("th")[sortingIndex].classList.contains("asc")) {
                    rows[0].getElementsByTagName("th")[sortingIndex].classList.remove("asc");
                    rows[0].getElementsByTagName("th")[sortingIndex].classList.add("desc");
                    isDescending = true;
                } else {
                    rows[0].getElementsByTagName("th")[sortingIndex].classList.remove("desc");
                    rows[0].getElementsByTagName("th")[sortingIndex].classList.add("asc");
                }

                // Convert HTMLCollection to array for sorting
                var rowArray = Array.from(rows).slice(1);

                // Sort rows based on selected column
                rowArray.sort(function (a, b) {
                    var aValue = a.getElementsByTagName("td")[sortingIndex].innerText.toLowerCase();
                    var bValue = b.getElementsByTagName("td")[sortingIndex].innerText.toLowerCase();
                    if (isDescending) {
                        return bValue.localeCompare(aValue);
                    } else {
                        return aValue.localeCompare(bValue);
                    }
                });

                // Reappend sorted rows to table
                rowArray.forEach(function (row) {
                    table.appendChild(row);
                });
            }
        }
    </script>
}
